{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CFT data sync handler (DynamoDB to RDS)",
  "Parameters": {
    "DataSyncHandlerName": {
      "Description": "Name of Lambda function to handle sync events",
      "Type": "String"
    },
    "Code": {
      "Description": "Lambda function code base",
      "Type": "String"
    },
    "Runtime": {
      "Description": "Lambda function runtime",
      "Type": "String",
      "Default": "java8"
    },
    "MemorySize": {
      "Description": "Lambda function memory size",
      "Type": "Number",
      "Default": "512"
    },
    "Timeout": {
      "Description": "Lambda function execution timeout",
      "Type": "Number",
      "Default": "300"
    },
    "SourceFileTransferLogTable": {
      "Description": "Source file transfer log table name",
      "Type": "String"
    },
    "SourceFileTransferLogTableStreamArn": {
      "Description": "Stream ARN for the source file transfer log table",
      "Type": "String"
    },
    "SourceFileTransferErrorTable": {
      "Description": "Source file transfer error table name",
      "Type": "String"
    },
    "SourceFileTransferErrorTableStreamArn": {
      "Description": "Stream ARN for the source file transfer error table",
      "Type": "String"
    },
    "TargetDatabaseUrl": {
      "Description": "Target database URL",
      "Type": "String"
    },
    "TargetDatabaseUser": {
      "Description": "Target database user",
      "Type": "String"
    },
    "TargetDatabasePassword": {
      "Description": "Target database password",
      "Type": "String",
      "NoEcho": "true"
    },
    "JdbcDriver": {
      "Description": "JDBC driver",
      "Type": "String"
    },
    "SecurityGroupIds": {
      "Description": "Security group ids that Lambda should use to set up the VPC configuration",
      "Type": "CommaDelimitedList"
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "Subnet ids that Lambda should use to set up the VPC configuration"
    },
    "DeployBucketName": {
      "Description": "Deployment artifacts S3 bucket",
      "Type": "String"
    },
    "System": {
      "Description": "System identifier",
      "Type": "String",
      "Default": "qc-pteit-cft",
      "AllowedValues": [
        "qc-pteit-cft"
      ]
    },
    "Environment": {
      "Description": "Environment",
      "Type": "String",
      "AllowedValues": [
        "dev",
        "tst",
        "uat",
        "prd"
      ]
    },
    "AdminContactTag": {
      "Description": "Required tag: Point of contact",
      "Type": "String"
    },
    "ServiceIdTag": {
      "Description": "Required tag: Application identifier",
      "Type": "String"
    },
    "ServiceDataTag": {
      "Description": "Required tag: Application properties",
      "Type": "String"
    }
  },
  "Resources": {
    "RDSPasswordSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Description": "Secret storing a provided password",
        "Name": {
          "Fn::Sub": "${System}/${Environment}/aurora-mysql/password"
        },
        "SecretString": {
          "Ref": "TargetDatabasePassword"
        },
        "Tags": [{
          "Key": "admin_contact",
          "Value": {
            "Ref": "AdminContactTag"
          }
        },
          {
            "Key": "service_id",
            "Value": {
              "Ref": "ServiceIdTag"
            }
          },
          {
            "Key": "service_data",
            "Value": {
              "Ref": "ServiceDataTag"
            }
          }
        ]
      }
    },
    "DataSyncHandler": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": "RDSPasswordSecret",
      "Properties": {
        "Handler": "com.qualcomm.pteit.cft.service.DynamoDbEventToRDSHandler::handleRequest",
        "FunctionName": {
          "Ref": "DataSyncHandlerName"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "DeployBucketName"
          },
          "S3Key": {
            "Ref": "Code"
          }
        },
        "MemorySize": {
          "Ref": "MemorySize"
        },
        "Runtime": {
          "Ref": "Runtime"
        },
        "Timeout": {
          "Ref": "Timeout"
        },
        "Environment": {
          "Variables": {
            "RDS_REGION": {
              "Ref": "AWS::Region"
            },
            "DYNAMODB_FILE_TRANSFER_LOG_TABLE": {
              "Ref": "SourceFileTransferLogTable"
            },
            "DYNAMODB_FILE_TRANSFER_ERROR_TABLE": {
              "Ref": "SourceFileTransferErrorTable"
            },
            "RDS_URL": {
              "Ref": "TargetDatabaseUrl"
            },
            "RDS_USER": {
              "Ref": "TargetDatabaseUser"
            },
            "RDS_PASSWORD_SECRET_ID": {
              "Fn::Sub": "${System}/${Environment}/aurora-mysql/password"
            },
            "JDBC_DRIVER": {
              "Ref": "JdbcDriver"
            }
          }
        },
        "VpcConfig": {
          "SecurityGroupIds": {
            "Ref": "SecurityGroupIds"
          },
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        },
        "Tags": [{
          "Key": "admin_contact",
          "Value": {
            "Ref": "AdminContactTag"
          }
        },
          {
            "Key": "service_id",
            "Value": {
              "Ref": "ServiceIdTag"
            }
          },
          {
            "Key": "service_data",
            "Value": {
              "Ref": "ServiceDataTag"
            }
          }
        ]
      }
    },
    "FileTransferLogEventSourceMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": "100",
        "Enabled": "true",
        "EventSourceArn": {
          "Ref": "SourceFileTransferLogTableStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "DataSyncHandler",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "FileTransferErrorEventSourceMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": "100",
        "Enabled": "true",
        "EventSourceArn": {
          "Ref": "SourceFileTransferErrorTableStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "DataSyncHandler",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "lambda.amazonaws.com"
              ]
            },
            "Action": [
              "sts:AssumeRole"
            ]
          }]
        },
        "Path": "/"
      }
    },
    "RolePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "root",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "cloudwatch:DeleteAlarms",
              "cloudwatch:DescribeAlarmHistory",
              "cloudwatch:DescribeAlarms",
              "cloudwatch:DescribeAlarmsForMetric",
              "cloudwatch:GetMetricStatistics",
              "cloudwatch:ListMetrics",
              "cloudwatch:PutMetricAlarm",
              "dax:*",
              "dynamodb:*",
              "ec2:CreateNetworkInterface",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeAccountAttributes",
              "ec2:DescribeAvailabilityZones",
              "ec2:DescribeInternetGateways",
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcAttribute",
              "ec2:DescribeVpcs",
              "iam:GetRole",
              "iam:ListRoles",
              "lambda:CreateFunction",
              "lambda:ListFunctions",
              "lambda:ListEventSourceMappings",
              "lambda:CreateEventSourceMapping",
              "lambda:DeleteEventSourceMapping",
              "lambda:GetFunctionConfiguration",
              "lambda:DeleteFunction",
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:DescribeLogStreams",
              "logs:GetLogEvents",
              "logs:PutLogEvents",
              "rds:*"
            ],
            "Resource": "*"
          },
            {
              "Action": "pi:*",
              "Effect": "Allow",
              "Resource": "arn:aws:pi:*:*:metrics/rds/*"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
              "Condition": {
                "StringLike": {
                  "iam:AWSServiceName": [
                    "rds.amazonaws.com",
                    "rds.application-autoscaling.amazonaws.com"
                  ]
                }
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "secretsmanager:ListSecretVersionIds"
              ],
              "Resource": [
                {
                  "Ref": "RDSPasswordSecret"
                }
              ]
            }
          ]
        },
        "Roles": [{
          "Ref": "LambdaExecutionRole"
        }]
      }
    }
  },
  "Outputs": {
    "FunctionArn": {
      "Description": "Lambda function ARN",
      "Value": {
        "Fn::GetAtt": [
          "DataSyncHandler",
          "Arn"
        ]
      }
    }
  }
}
